{"version":3,"file":"static/js/25.024a7dc4.chunk.js","mappings":"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","sources":["components/AddContact/AddContact.styled.jsx","redux/selectors.js","components/AddContact/AddContact.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Section/Section.styled.jsx","components/Titles/Titles.styled.jsx","components/Section/Section.jsx","components/ShowContacts/ShowContacts.styled.jsx","components/ShowContacts/ShowContacts.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  min-width: 1000px;\n  padding: 10px;\n  border: 2px solid black;\n  border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 20px;\n\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  font-weight: 600;\n`;\nexport const Input = styled.input`\n  display: block;\n  margin-top: 10px;\n  width: calc(100% - 50px);\n\n  padding: 8px;\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  max-width: 150px;\n  padding: 10px;\n\n  background-color: transparent;\n  border: 2px solid #2196f3;\n  border-radius: 4px;\n  cursor: pointer;\n\n  font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n  font-size: 18px;\n  font-weight: 600;\n\n  :hover {\n    background-color: #2196f3;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedQuery = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedQuery)\n    );\n  }\n);\n\n\n","import { Form, Label, Input, Button } from './AddContact.styled';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts/contacts.thunk';\nimport { selectContacts } from 'redux/selectors';\nimport { toast } from 'react-toastify';\n\nexport const AddContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const contactAlreadyExists = contacts.some(\n      item => item.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (contactAlreadyExists) {\n      toast.error(`${name} is already in your contacts`);\n      resetForm();\n      return;\n    }\n\n    dispatch(addContactThunk({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form action=\"\" onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Name\"\n        />\n      </Label>\n      <Label>\n        Phone number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"Phone number\"\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  display: block;\n  margin-right: 25px;\n\n  width: calc(100% - 50px);\n\n  padding: 8px;\n  font-size: 18px;\n`;\n","import { Input } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterChange } from 'redux/filter.slice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { Rings } from 'react-loader-spinner';\nimport { selectIsLoading } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n\n  const onChange = e => {\n    dispatch(filterChange(e.target.value));\n  };\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'start', marginBottom: '18px' }}>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        onChange={onChange}\n        placeholder=\"Search\"\n        value={filter}\n      />\n\n      {isLoading && (\n        <Rings\n          height=\"40\"\n          width=\"40\"\n          color=\"#4fa94d\"\n          radius=\"6\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          visible={true}\n          ariaLabel=\"rings-loading\"\n        />\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  padding: 30px 300px;\n  margin: 0 auto;\n\n  :last-child {\n    padding-top: 0;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin-top: 0;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-top: 0;\n`;\n","import { StyledSection } from './Section.styled';\nimport { SecondaryTitle } from 'components/Titles/Titles.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <StyledSection>\n      <SecondaryTitle>{title}</SecondaryTitle>\n      {children}\n    </StyledSection>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 0 50px 0 20px;\n  margin: 0;\n `;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n\n  font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n  font-size: 24px;\n  font-weight: 500;\n\n  :not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const Button = styled.button`\n  background-color: transparent;\n  border: 2px solid #2196f3;\n  border-radius: 4px;\n  cursor: pointer;\n\n  font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;\n  font-size: 18px;\n  font-weight: 600;\n\n  :hover {\n    background-color: #2196f3;\n  }\n`;\n","import { List, Item, Button } from './ShowContacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContactThunk,\n  fetchContactsThunk,\n} from 'redux/contacts/contacts.thunk';\nimport { useEffect } from 'react';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ShowContacts = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const onDelete = id => {\n    dispatch(deleteContactThunk(id));\n  };\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <Item key={contact.id}>\n          {contact.name}: {contact.number}\n          <Button type=\"button\" onClick={() => onDelete(contact.id)}>\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\nimport soBusy from '../../imgs/soBusy.jpg';\n\nexport const MainContent = styled.main`\n  padding-top: 50px;\n  width: 100%;\n  background-image: url(${soBusy});\n  background-size: cover;\n  background-position: center;\n`;\n\n","import { AddContact } from 'components/AddContact/AddContact';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { ShowContacts } from 'components/ShowContacts/ShowContacts';\nimport { MainContent } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  return (\n    <MainContent>\n      <div>\n        <Section title=\"Phonebook\">\n          <AddContact />\n        </Section>\n\n        <Section title=\"Contacts\">\n          <Filter />\n          <ShowContacts />\n        </Section>\n      </div>\n    </MainContent>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Form","styled","Label","Input","Button","selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectVisibleContacts","createSelector","normalizedQuery","toLowerCase","contact","name","includes","AddContact","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","resetForm","action","onSubmit","preventDefault","some","item","toast","addContactThunk","type","pattern","title","required","onChange","placeholder","Filter","style","display","alignItems","marginBottom","filterChange","height","width","color","radius","wrapperStyle","wrapperClass","visible","ariaLabel","StyledSection","SecondaryTitle","Section","children","List","Item","ShowContacts","useEffect","fetchContactsThunk","map","onClick","id","deleteContactThunk","MainContent","soBusy"],"sourceRoot":""}